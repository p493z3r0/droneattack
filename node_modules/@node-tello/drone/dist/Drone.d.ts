/// <reference types="node" />
import { EventEmitter } from 'events';
/**
 *
 */
export interface IDroneOptions {
    address?: string;
    commandPort?: number;
    statePort?: number;
    videoPort?: number;
}
/**
 *
 */
export declare class Drone extends EventEmitter {
    /**
     *
     */
    private readonly commander;
    private readonly cadet;
    /**
     *
     */
    constructor(options?: IDroneOptions);
    /**
     *
     */
    initalise(): Promise<void>;
    /**
     *
     */
    disconnect(): void;
    takeoff(): Promise<boolean>;
    land(): Promise<boolean>;
    streamOn(): Promise<boolean>;
    streamOff(): Promise<boolean>;
    emergency(): Promise<boolean>;
    up(x: number): Promise<boolean>;
    down(x: number): Promise<boolean>;
    left(x: number): Promise<boolean>;
    right(x: number): Promise<boolean>;
    forward(x: number): Promise<boolean>;
    back(x: number): Promise<boolean>;
    cw(): Promise<boolean>;
    ccw(): Promise<boolean>;
    flip(): Promise<boolean>;
    go(): Promise<boolean>;
    stop(): Promise<boolean>;
    curve(): Promise<boolean>;
    jump(): Promise<boolean>;
    setSpeed(): Promise<boolean>;
    setRc(): Promise<boolean>;
    setWifi(): Promise<boolean>;
    enabledMission(): Promise<boolean>;
    disableMission(): Promise<boolean>;
    setMissionDirection(): Promise<boolean>;
    setAp(): Promise<boolean>;
    getSpeed(): Promise<string>;
    getBattery(): Promise<string>;
    getTime(): Promise<string>;
    getWifi(): Promise<string>;
    getSDK(): Promise<string>;
    getSerialNumber(): Promise<string>;
}
