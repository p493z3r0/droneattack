"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cadet = void 0;
const events_1 = require("events");
const dgram_1 = require("dgram");
const CadetEvent_1 = require("./enums/CadetEvent");
const State_1 = require("./State");
/**
 *
 */
class Cadet extends events_1.EventEmitter {
    /**
     *
     */
    constructor(options) {
        super();
        const defaults = {
            localAddress: '0.0.0.0',
            localPort: 8890
        };
        const localOptions = {
            ...defaults,
            ...options
        };
        this._localAddress = localOptions.localAddress;
        this._localPort = localOptions.localPort;
        this._initialised = false;
        this._socketBound = false;
        this._socket = dgram_1.createSocket('udp4');
    }
    /**
     *
     */
    initialise() {
        this._bindSocket();
        this._initialised = true;
    }
    /**
     *
     * @private
     */
    _bindSocket() {
        this._socket.on('error', (err) => {
            this.emit(CadetEvent_1.CadetEventEnum.error, err);
            this._socket.close();
        });
        this._socket.on('close', () => {
            this._socket.close();
        });
        this._socket.on('message', (msg, rinfo) => {
            this.emit(CadetEvent_1.CadetEventEnum.state, State_1.createStateFromString(msg.toString('utf-8')));
        });
        this._socket.on('listening', () => {
            const address = this._socket.address();
            console.log(`server listening ${address.address}:${address.port}`);
        });
        this._socket.bind(this._localPort, this._localAddress);
        this._socketBound = true;
    }
    /**
     *
     */
    get localAddress() { return this._localAddress; }
    get localPort() { return this._localPort; }
    get initialised() { return this._initialised; }
}
exports.Cadet = Cadet;
//# sourceMappingURL=Cadet.js.map